# old base.hrml:

<html lang="en">
<head>
    {% if title %}
    <title>{{ title }} - Shopping</title>
    {% else %}
    <title>Shopping</title>
    {% endif %}
</head>
<body>
<div>
    Shopping List:
    <a href="{{ url_for('index') }}">Home</a>
    <a href="{{ url_for('login') }}">Login</a>
    <a href="{{ url_for('logout') }}">Logout</a>
</div>
<hr>
{% with messages = get_flashed_messages() %}
{% if messages %}
<ul>
    {% for message in messages %}
    <li>{{ message }}</li>
    {% endfor %}
</ul>
{% endif %}
{% endwith %}
{% block content %}{% endblock %}
<!--<div>{% block footer %}basefooter{% endblock %}</div>-->
</body>
</html>

====================================
from index.html:

           {% for post in posts %}
    <div><p>{{ post.author.username }} says: <b>{{ post.body }}</b></p></div>

====================================

https://stackoverflow.com/questions/17887519/how-to-use-queryselectfield-in-flask
how to select from base info into forms - QuerySelectField

====================================
button - Add Product to Shopping List:

<form>
    <p style="margin-left:0.7em">
<input type="button" value="  Add Product to Shopping List  " onClick='location.href="add_product_to_shopping_list"'>
    </p>
</form>

    <div><p>  </p></div>

{% endblock %}

=====================================
all products

{% block content %}
<h1>All Products</h1>
    {% for product in products %}
    <div><p><p style="margin-left:1.5em">{{ product }}</p></div>
    {% endfor %}

========================================
text with dropdown button

<div>
Make your choice :

<div class="btn-group">
    <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
        Button <span class="caret"></span>
    </button>
    <ul class="dropdown-menu" role="menu">
        <li><a href="#" id="btn1">Select 1</a></li>
        <li><a href="#" id="btn2">Select 2</a></li>
        <li><a href="#" id="btn3">Select 3</a></li>
    </ul>
</div>
======================
<div class="col-sm-8">
    <h4 class="d-inline-block">Edit Post</h4>
    <a href="+++" button type="button" class="btn btn-primary">Add New</a></button>
</div>        IT WORKS!!!

=======================
form for select product:

<h3>Select Product for Shopping List</h3>

  <form action="" method="post">

        {{ form.hidden_tag() }}
        <p>
            <p style="margin-left:1.5em">{{ form.select_product_to_add.label }}<br>
            {{ form.select_product_to_add }}<br>
        </p>
        <p><p style="margin-left:1.5em">{{ form.submit() }}</p>
    </form></p>
=================================================
 	Rinse the rice. Cut the meat, carrots and onions into 0,5-1 cm cubes. Put all the ingredients into the bowl, add vegetable olive oil, salt and spices and properly stir. Put the rice into the bowl. Add water and garlic on the top. Close the lid of multicooker. Set the program PILAF, set the time for 45 minutes. Cook until the program ends.
Pilaf

    Rice - 200 g
    Chicken - 250 g
    Onion - 80 g
    Carrot - 150 g
    Garlic - 20 g
    Vegetable oil - 50 mL
    Water - 260 mL
    Salt - 15 g


 	Place 1 cup uncooked rice in a bowl. Add 2 cups warm water. Add salt. Let it soak for about 30 minutes in the bowl before straining out the rice.
Rice

    Rice - 250 g
    Water - 500 mL
    Salt - 5 g


 	Crack four eggs into a bowl, add 30ml (2 tbsp) of milk and a pinch of salt and black pepper. Beat the mixture lightly with a whisk or fork. Melt 1 tbsp of butter in a medium size fry pan on a low heat and when it starts foaming, pour in the eggs and leave to set for 60-90 seconds. Using a spatula, gently pull the eggs from the edges of the pan into the center. Turn and tilt the pan so the runny eggs take up the available space and again gently pull it towards the center. Remove the pan from the heat before the egg is completely set. Leave to sit for a minute or two so the egg can gently finish cooking in its own heat.
Scrambled Eggs


    Egg - 4 pc
    Butter - 15 g
    Milk - 30 mL
    Salt - 5 g


Preheat the oven to 160C and flour a ring or bundt tin approximately 23cm in diameter,. In a large bowl, mix together the flour, baking powder and sugar. In another bowl, whisk together the ricotta and olive oil, then add the eggs one by one, beating between each addition, until smooth. Add the ricotta mixture to the flour mixture and whisk until you have a thick batter. Add the lemon zest, stir again, then pour the batter into the prepared tin. Bake for 30-40 minutes if you are using a ring tin or until the cake is golden and fully set. Allow the cake to cool before turning it out of the tin and on to a plate.
Ricotta and lemon ring cake

<img src="https://images.unsplash.com/photo-1493770348161-369560ae357d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=750&q=80" alt="Trulli" width="470" height="300" vspace="5" hspace="5">
=====
# @app.route('/delete_shopping_list/<shopping_list_id>', methods=['GET', 'POST'])
# @login_required
# def delete_shopping_list(shopping_list_id):
#     shopping_list = ShoppingList.query.filter_by(id=shopping_list_id).first()
#     item = ShoppingListItem.query.filter_by(shopping_list_id=shopping_list_id)
#     form = AskDeleteShoppingListForm()
#     owner = current_user.id
#     shopping_lists = ShoppingList.query.filter_by(owner=owner)
#
#     if request.method == 'GET':
#         return render_template("delete_shopping_list.html", title='Do you want to delete?', shopping_list=shopping_list,
#                                form=form)
#     if form.validate_on_submit():
#         if form.ask.data == 'yes':
#             # for item in shopping_list.items:
#             filtered_items = list(filter(
#             lambda item: shopping_list.id == item.shopping_list_id,
#             shopping_list.items))
#             if filtered_items:
#                 item = filtered_items[0]
#                 db.session.delete(item)
#             db.session.delete(shopping_list)
#         db.session.commit()
#         return render_template('all_lists.html', title='All Shopping Lists', shopping_lists=shopping_lists)
#     else:
#         return render_template('all_lists.html', title='All Shopping Lists', shopping_lists=shopping_lists)@app.route('/delete_shopping_list/<shopping_list_id>', methods=['GET', 'POST'])
